#!/bin/sh

[ -d ~/dotfiles ] && DOTFILES="$HOME/dotfiles" || { echo "!dotfiles"; exit; }

# MAKE CONFIG DIR
[ ! -d ~/.config ] && mkdir ~/.config && echo "mkdir config" || echo "config ok"

# USER-DIRS.DIRS
[ ! -f "$DOTFILES"/.config/user-dirs.dirs ] && echo "!user-dirs.dirs" && exit

rm -rf ~/.config/user-dirs.dirs
ln -s "$DOTFILES"/.config/user-dirs.dirs \
	~/.config/user-dirs.dirs && \
	source ~/.config/user-dirs.dirs && \
	echo "user-dirs.dirs linked and sourced."

# Z SHELL
[ ! -f "$DOTFILES"/.zprofile ] && echo "!.zprofile" && exit

rm -rf ~/.zprofile
ln -s "$DOTFILES"/.zprofile ~/.zprofile && \
	echo ".zprofile linked"

[ ! -f "$DOTFILES"/.config/zsh/.zshrc ] && echo "!.zshrc" && exit

rm -rf "$XDG_CONFIG_HOME"/zsh
mkdir "$XDG_CONFIG_HOME"/zsh
mkdir -p ~/.cache/zsh

rm -rf "$XDG_CONFIG_HOME"/zsh/.zshrc
ln -s "$DOTFILES"/.config/zsh/.zshrc \
	"$XDG_CONFIG_HOME"/zsh/.zshrc && echo ".zshrc linked."

git clone https://github.com/zsh-users/zsh-syntax-highlighting \
	"$XDG_CONFIG_HOME"/zsh/zsh-syntax-highlighting && \
	echo "zsh-syntax-highlighting cloned."

git clone https://github.com/zsh-users/zsh-completions \
	"$XDG_CONFIG_HOME"/zsh/zsh-completions && \
	echo "zsh-completions cloned."

git clone https://github.com/zsh-users/zsh-history-substring-search \
	"$XDG_CONFIG_HOME"/zsh/zsh-history-substring-search && \
	echo "zsh-history-substring-search cloned."

git clone https://github.com/zsh-users/zsh-autosuggestions \
	"$XDG_CONFIG_HOME"/zsh/zsh-autosuggestions && \
	echo "zsh-autosuggestions cloned."

# FONTCONFIG
[ ! -f "$DOTFILES"/.config/fontconfig/fonts.conf ] && echo "!fontconfig" && exit

rm -rf "$XDG_CONFIG_HOME"/fontconfig
mkdir "$XDG_CONFIG_HOME"/fontconfig
ln -s "$DOTFILES"/.config/fontconfig/fonts.conf \
	"$XDG_CONFIG_HOME"/fontconfig/fonts.conf && \
	echo "fontconfig folder created and fonts.conf linked."

# GTKRC 2.0
[ ! -f "$DOTFILES"/.config/gtk-2.0/.gtkrc-2.0 ] && echo "!gtkrc-2.0" && exit

rm -rf "$XDG_CONFIG_HOME"/gtk-2.0
mkdir "$XDG_CONFIG_HOME"/gtk-2.0
ln -s "$DOTFILES"/.config/gtk-2.0/.gtkrc-2.0 \
	"$XDG_CONFIG_HOME"/gtk-2.0/.gtkrc-2.0 && \
	echo "gtk-2.0 folder created and .gtkrc-2.0 linked."

# GTKRC 3.0
[ ! -f "$DOTFILES"/.config/gtk-3.0/settings.ini ] && echo "!gtk-3.0" && exit

rm -rf "$XDG_CONFIG_HOME"/gtk-3.0
mkdir "$XDG_CONFIG_HOME"/gtk-3.0
ln -s "$DOTFILES"/.config/gtk-3.0/settings.ini \
	"$XDG_CONFIG_HOME"/gtk-3.0/settings.ini && \
	echo "gtk-3.0 folder created and settings.ini linked."

# NEWS FEED
[ ! -f "$DOTFILES"/.config/newsboat/config ] && echo "!newsboat" && exit

rm -rf "$XDG_CONFIG_HOME"/newsboat
mkdir "$XDG_CONFIG_HOME"/newsboat
ln -s "$DOTFILES"/.config/newsboat/config \
	"$XDG_CONFIG_HOME"/newsboat/config && \
	echo "newsboat folder created and config linked."
	ln -s "$DOTFILES"/.config/newsboat/urls \
		"$XDG_CONFIG_HOME"/newsboat/urls && \
		echo "newsboat urls linked."

# SXIV
[ ! -f "$DOTFILES"/.config/sxiv/exec/key-handler ] && echo "!sxiv" && exit

rm -rf "$XDG_CONFIG_HOME"/sxiv
mkdir -p "$XDG_CONFIG_HOME"/sxiv/exec

ln -s "$DOTFILES"/.config/sxiv/exec/key-handler \
	"$XDG_CONFIG_HOME"/sxiv/exec/key-handler && \
	echo "sxiv folder created and key-handler linked."

ln -s "$DOTFILES"/.config/sxiv/exec/image-info \
	"$XDG_CONFIG_HOME"/sxiv/exec/image-info && \
	echo "sxiv image-info linked."

# VIFM
[ ! -f "$DOTFILES"/.config/vifm/vifmrc ] && echo "!vifmrc" && exit

rm -rf "$XDG_CONFIG_HOME"/vifm
mkdir "$XDG_CONFIG_HOME"/vifm

ln -s "$DOTFILES"/.config/vifm/vifmrc \
	"$XDG_CONFIG_HOME"/vifm/vifmrc && \
	echo "vifm folder created and vifmrc linked."

ln -s "$DOTFILES"/.config/vifm/colors \
		"$XDG_CONFIG_HOME"/vifm/colors && \
		echo "vifm colors linked."

# TMUX
[ ! -f "$DOTFILES"/.config/tmux/tmux.conf ] && echo "!tmux" && exit

rm -rf "$XDG_CONFIG_HOME"/tmux
mkdir "$XDG_CONFIG_HOME"/tmux
ln -s "$DOTFILES"/.config/tmux/tmux.conf \
	"$XDG_CONFIG_HOME"/tmux/tmux.conf && \
	echo "tmux folder created and tmux.conf linked."

# NEOVIM
[ ! -f "$DOTFILES"/.config/nvim/init.vim ] && echo "!nvim" && exit

rm -rf "$XDG_CONFIG_HOME"/nvim
mkdir "$XDG_CONFIG_HOME"/nvim

ln -s "$DOTFILES"/.config/nvim/init.vim \
	"$XDG_CONFIG_HOME"/nvim/init.vim && \
	echo "nvim folder created and init.vim linked."

echo -n "Installing vim plugins... "
nvim -es -u "$XDG_CONFIG_HOME"/nvim/init.vim -i NONE -c "PlugInstall" -c "qa"
echo "done."

# THEME CURSOR
[ ! -f "$DOTFILES"/.local/share/icons/default/index.theme ] && echo "!icons" && exit

rm -rf ~/.local/share/icons/default
mkdir -p ~/.local/share/icons/default
ln -s "$DOTFILES"/.local/share/icons/default/index.theme \
	~/.local/share/icons/default/index.theme && \
	echo "Icon theme linked."

# MIME APPS
[ ! -f "$DOTFILES"/.config/mimeapps.list ] && echo "!mimeapps.list" && exit

rm -rf "$XDG_CONFIG_HOME"/mimeapps.list
ln -s "$DOTFILES"/.config/mimeapps.list \
	"$XDG_CONFIG_HOME"/mimeapps.list && \
	echo "mimeapps.list linked."

rm -rf ~/.local/share/applications
mkdir -p ~/.local/share/applications

ln -s "$DOTFILES"/.local/share/applications/vifm.desktop \
	~/.local/share/applications/vifm.desktop && \
	echo "vifm.desktop linked."

#if [ "$POST_INSTALLATION" = true ]; then
#	git clone https://aur.archlinux.org/yay.git
#	cd yay && makepkg -Asci && cd .. && rm -rf yay
#	yay -S archivemount rar2fs
#	source /home/$USERNAME/.zprofile
#fi
